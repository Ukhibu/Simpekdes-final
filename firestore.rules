rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Fungsi bantuan untuk validasi
    function isSignedIn() {
      return request.auth != null;
    }

    function isUserRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function getUserDesa() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.desa;
    }
    
    function isDataOwner(desa) {
    	return getUserDesa() == desa;
    }
    
    function validatePerangkatData(data) {
        return data.nama is string && data.nama.size() > 0 &&
               data.desa is string && data.desa.size() > 0 &&
               data.jabatan is string && data.jabatan.size() > 0 &&
               (!('nik' in data) || data.nik is string && data.nik.size() <= 16);
    }

    // Aturan untuk koleksi 'users'
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isUserRole('admin_kecamatan');
      allow create: if isSignedIn();
    }
    
    // Aturan untuk koleksi 'perangkat'
    match /perangkat/{docId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && 
                      (isUserRole('admin_kecamatan') || (isUserRole('admin_desa') && isDataOwner(request.resource.data.desa))) &&
                      validatePerangkatData(request.resource.data);
                      
      allow update: if isSignedIn() && 
                      (isUserRole('admin_kecamatan') || (isUserRole('admin_desa') && isDataOwner(resource.data.desa))) &&
                      validatePerangkatData(request.resource.data);
                      
      allow delete: if isSignedIn() && (isUserRole('admin_kecamatan') || (isUserRole('admin_desa') && isDataOwner(resource.data.desa)));
    }
    
    // Aturan untuk koleksi 'bpd'
    match /bpd/{docId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && (isUserRole('admin_kecamatan') || (isUserRole('admin_desa') && isDataOwner(request.resource.data.desa)));
      allow delete: if isSignedIn() && (isUserRole('admin_kecamatan') || (isUserRole('admin_desa') && isDataOwner(resource.data.desa)));
    }

    // Aturan umum untuk organisasi desa lainnya (PKK, LPM, dll.)
    match /{collectionName}/{docId} {
      // Izinkan baca untuk semua yang login
      allow read: if isSignedIn();
      
      // Izinkan tulis (buat, ubah, hapus) jika admin kecamatan, atau jika admin desa yang memiliki data
      allow write: if isSignedIn() &&
                     (isUserRole('admin_kecamatan') || (isUserRole('admin_desa') && isDataOwner(request.resource.data.desa)));
                     
      // Kecuali untuk koleksi yang sudah diatur di atas
      // Ini mencegah aturan umum menimpa aturan yang lebih spesifik
      // Namun, karena 'write' mencakup create, update, delete, ini sudah cukup
      // untuk pkk, lpm, karang_taruna, rt_rw
    }
    
     match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isUserRole('admin_kecamatan');
    }
  }
}
