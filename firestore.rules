rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =====================================================================
    // FUNGSI BANTUAN (HELPER FUNCTIONS)
    // =====================================================================
    
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isKecamatanAdmin() {
      return isSignedIn() && getUserData().role == 'admin_kecamatan';
    }
    
    function isDesaAdmin() {
      return isSignedIn() && getUserData().role == 'admin_desa';
    }

    function isOwnerOfResource() {
      return isDesaAdmin() && request.resource.data.desa == getUserData().desa;
    }

    function isOwnerOfExistingDoc() {
      return isDesaAdmin() && resource.data.desa == getUserData().desa;
    }

    // =====================================================================
    // MODUL UTAMA: PENGGUNA, PENGATURAN, & NOTIFIKASI
    // =====================================================================

    match /users/{userId} {
      allow read, update: if isKecamatanAdmin() || request.auth.uid == userId;
      allow create: if isKecamatanAdmin();
      allow delete: if false; // User deletion should be handled from the Firebase Console/Admin SDK
    }

    match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isKecamatanAdmin();
    }

    match /notifications/{notificationId} {
      allow create: if isSignedIn();
      // User can read/update their own notifications.
      // Kecamatan Admin can read/update role-based notifications.
      allow read, update: if isSignedIn() && (
        request.auth.uid == resource.data.userId ||
        (isKecamatanAdmin() && resource.data.targetRole == 'admin_kecamatan')
      );
      // Only the recipient can delete a direct notification.
      // Role-based notifications are not deletable by clients for simplicity.
      allow delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // =====================================================================
    // ATURAN GENERIK UNTUK MODUL DATA MASTER
    // =====================================================================

    function canReadData() {
      return isSignedIn();
    }
    function canCreateData() {
      return isKecamatanAdmin() || isOwnerOfResource();
    }
    function canUpdateDeleteData() {
      return isKecamatanAdmin() || isOwnerOfExistingDoc();
    }

    // =====================================================================
    // PENERAPAN ATURAN PADA KOLEKSI DATA MASTER
    // =====================================================================
    
    match /perangkat/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /bpd/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }

    match /lpm/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /pkk/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }

    match /karang_taruna/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /rt_rw/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /lpm_program/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /pkk_program/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /karang_taruna_kegiatan/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /aset/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /efile/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }
    
    match /kegiatan/{docId} {
      allow read: if canReadData();
      allow create: if canCreateData();
      allow update, delete: if canUpdateDeleteData();
    }

    // =====================================================================
    // MODUL KEUANGAN DESA
    // =====================================================================

    match /anggaran_tahunan/{anggaranId} {
      allow read: if isSignedIn();
      allow create: if isOwnerOfResource();
      allow update, delete: if isKecamatanAdmin() || (isOwnerOfExistingDoc() && (resource.data.status == 'Draft' || resource.data.status == 'Ditolak'));

      match /realisasi/{realisasiId} {
        allow read: if isSignedIn();
        allow create: if isKecamatanAdmin() || (
            isDesaAdmin()
            && request.resource.data.parentDesa == getUserData().desa
            && get(/databases/$(database)/documents/anggaran_tahunan/$(anggaranId)).data.status == 'Disahkan'
        );
        allow update, delete: if isKecamatanAdmin() || (
            isDesaAdmin()
            && resource.data.parentDesa == getUserData().desa
            && get(/databases/$(database)/documents/anggaran_tahunan/$(anggaranId)).data.status == 'Disahkan'
        );
      }
    }

    match /{path=**}/realisasi/{realisasiId} {
      allow read: if isKecamatanAdmin() || (isDesaAdmin() && resource.data.parentDesa == getUserData().desa);
    }
  }
}

