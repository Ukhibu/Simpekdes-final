rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {

// == Helper Functions ==
function isAuthenticated() {
  return request.auth != null;
}

function getUserData() {
  return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
}

function isAdminKecamatan() {
  return isAuthenticated() && getUserData().role == 'admin_kecamatan';
}

function isAdminDesa() {
  return isAuthenticated() && getUserData().role == 'admin_desa';
}

function isOwner(userId) {
  return request.auth.uid == userId;
}

// Memeriksa apakah admin desa adalah pemilik dokumen yang sedang diakses
function isAdminDesaOfResource(desa) {
  return isAdminDesa() && getUserData().desa == desa;
}

// == Aturan Inti Aplikasi ==

// Pengguna (Profil Admin)
match /users/{userId} {
  allow read: if isAuthenticated();
  // Hanya pemilik akun yang bisa mengubah profilnya
  allow update: if isOwner(userId);
  // Hanya admin kecamatan yang bisa membuat atau menghapus akun
  allow create, delete: if isAdminKecamatan();
}

// Notifikasi
match /notifications/{notificationId} {
  allow read, create, update: if isAuthenticated();
  allow delete: if isAdminKecamatan();
}

// Pengaturan & Branding
match /settings/{settingId} {
    allow read: if isAuthenticated();
    allow write: if isAdminKecamatan();
}
 match /branding/{brandId} {
    allow read: if true;
    allow write: if isAdminKecamatan();
}

// == Aturan untuk Fitur Purna Tugas Otomatis ==

// Riwayat Perangkat (Purna)
match /historyPerangkatDesa/{docId} {
    allow read: if isAuthenticated();
    // Izin tulis diperlukan agar pengecekan otomatis dari browser admin bisa berjalan
    allow write: if isAuthenticated(); 
}

// Dokumen Sistem (untuk menyimpan timestamp pengecekan terakhir)
match /system/{docId} {
    allow read, write: if isAuthenticated();
}

// == Aturan untuk Semua Modul Data Utama ==
// Aturan berikut diterapkan untuk setiap koleksi data utama secara individual.

function canCreateMainData() {
    return isAdminKecamatan() || (isAdminDesa() && request.resource.data.desa == getUserData().desa);
}

function canUpdateDeleteMainData() {
    return isAdminKecamatan() || isAdminDesaOfResource(resource.data.desa);
}

match /perangkat/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /aset/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /bpd/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /lpm/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /pkk/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /karang_taruna/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /rt_rw/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /efile/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /kegiatan/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /karang_taruna_kegiatan/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /lpm_program/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

match /pkk_program/{docId} {
    allow read: if isAuthenticated();
    allow create: if canCreateMainData();
    allow update, delete: if canUpdateDeleteMainData();
}

// MODUL KEUANGAN DESA
match /anggaran_tahunan/{anggaranId} {
  allow read: if isAuthenticated();
  allow create: if isAdminDesa() && request.resource.data.desa == getUserData().desa;
  allow update, delete: if isAdminKecamatan() || (isAdminDesaOfResource(resource.data.desa) && (resource.data.status == 'Draft' || resource.data.status == 'Ditolak'));

  match /realisasi/{realisasiId} {
    allow read: if isAuthenticated();
    allow create: if isAdminKecamatan() || (
        isAdminDesa()
        && request.resource.data.parentDesa == getUserData().desa
        && get(/databases/$(database)/documents/anggaran_tahunan/$(anggaranId)).data.status == 'Disahkan'
    );
    allow update, delete: if isAdminKecamatan() || (
        isAdminDesa()
        && resource.data.parentDesa == getUserData().desa
        && get(/databases/$(database)/documents/anggaran_tahunan/$(anggaranId)).data.status == 'Disahkan'
    );
  }
}

match /{path=**}/realisasi/{realisasiId} {
  allow read: if isAdminKecamatan() || (isAdminDesa() && resource.data.parentDesa == getUserData().desa);
}

}
}